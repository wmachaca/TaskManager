name: Backend Tests

on:
  push:
    paths:
      - 'backend/**'
    branches: [main, develop]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [18]

    runs-on: ${{ matrix.os }}
    timeout-minutes: 20

    steps:
      # 1. SETUP SECURE ENVIRONMENT
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # 2. WINDOWS SPECIFIC CONFIG
      - name: Configure Git (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          git config --global core.longpaths true
          git config --global core.autocrlf false
          git config --global core.symlinks false

      # 3. NODE.JS SETUP
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      # 4. DATABASE SETUP (Using your .env config)
      - name: Start PostgreSQL (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          net start postgresql-x64-14 || echo "PostgreSQL already running"
          createdb taskmanager_test || echo "Database may exist"

      - name: Start PostgreSQL (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo systemctl start postgresql || true
          sudo -u postgres createdb taskmanager_test || true

      # 5. TEST SETUP
      - name: Install dependencies
        run: npm ci
        working-directory: ./backend

      - name: Prepare test database
        run: |
          npx prisma generate
          npx prisma migrate dev --name init
          npx prisma db push --accept-data-loss
        working-directory: ./backend
        env:
          DATABASE_URL: 'postgresql://postgres:elmundoesancho@localhost:5432/taskmanager_test'

      # 6. RUN TESTS
      - name: Run tests
        run: npm test
        working-directory: ./backend
        env:
          DATABASE_URL: 'postgresql://postgres:elmundoesancho@localhost:5432/taskmanager_test'
          CI: true
